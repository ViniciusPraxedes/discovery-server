version: 0.2
phases:
  pre_build:
    commands:
      - echo Entered the pre_build phase...
      - aws --version
      - echo Logging into Amazon ECR
      - aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 248402500384.dkr.ecr.eu-north-1.amazonaws.com
      - echo setting repository URI....
      - REPOSITORY_URI=248402500384.dkr.ecr.eu-north-1.amazonaws.com/discovery-server
      - echo setting image tag ....
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
    finally:
      - echo This always runs even if the login command fails
  build:
    commands:
      - echo Entered the build phase...
      - echo Build started on `date`
      - mvn clean install
      - echo building docker image
      - docker build -t $REPOSITORY_URI:latest .
      - echo tagging the docker image
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
    finally:
      - echo This always runs even if the install command fails
  post_build:
    commands:
      - echo Entered the post_build phase...
      - echo pushing docker image to amazon ECR
      - echo pushing repository
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo setting container name...
      - DOCKER_CONTAINER_NAME=discovery-server
      - echo writing images definitions file....
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json
      - echo Build completed on `date`
artifacts:
  files:
    - imagedefinitions.json

